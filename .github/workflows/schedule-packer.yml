name: Schedule Packer automatic image build
on:
    push:
        branches:
            - main

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
    ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
    ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
    ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
    ARM_USE_AZUREAD: true
    PACKER_VERSION: "latest"

jobs:
  terraform-plan:
    defaults:
      run:
        working-directory: ./src
    name: Terraform Plan
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="resource_group_name=${{vars.BACKEND_AZURE_RESOURCE_GROUP_NAME}}" -backend-config="storage_account_name=${{vars.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}" -backend-config="container_name=${{vars.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ./src
        run: terraform plan -out=tfplan -var-file="./dev.tfvars"

      - name: Terraform Apply
        id: apply
        working-directory: ./src
        run: terraform apply -auto-approve tfplan

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          packer-version: ${{ env.PACKER_VERSION }}

    #   - name: Prepare Packer environment
    #     run: |
    #         echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
    #         echo "ARM_CLIENT_ID=${{ vars.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
    #         echo "ARM_TENANT_ID=${{ vars.AZURE_TENANT_ID }}" >> $GITHUB_ENV
    #         echo "ARM_SUBSCRIPTION_ID=${{ vars.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Initialize Packer
        working-directory: ./src
        run: |
          packer init ./az-windows-11-ent.pkr.hcl

      - name: Run `packer validate`
        working-directory: ./src
        run: |
          packer validate ./az-windows-11-ent.pkr.hcl

      - name: Run `packer build`
        working-directory: ./src
        run: |
          packer build ./az-windows-11-ent.pkr.hcl
